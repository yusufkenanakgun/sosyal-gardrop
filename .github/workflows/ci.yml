name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CI: 'true'
      NEXT_TELEMETRY_DISABLED: '1'
      TURBO_TELEMETRY_DISABLED: '1'
      NODE_OPTIONS: '--max-old-space-size=4096'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # package.json: "packageManager" s√ºr√ºm√ºn√º kullan
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Yalnƒ±zca pnpm store'u cache'le
      - name: Get pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # üõ† Sahiplik ve izinleri garanti altƒ±na al
      - name: Fix workspace ownership & perms
        run: |
          sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"
          umask 0022
          # t√ºm node_modules klas√∂rlerini temizle (cache'lemiyoruz)
          find . -name node_modules -type d -prune -exec rm -rf {} +
          # √∂zellikle mobile i√ßin tekrar olu≈ütur ve izinleri ver
          mkdir -p apps/mobile/node_modules
          chmod -R u+rwX . 

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache turborepo
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Prisma generate (@sg/api)
        working-directory: apps/api
        run: pnpm prisma generate

      - name: Lint
        run: pnpm -w turbo run lint

      - name: Typecheck
        run: pnpm -w typecheck

      - name: Build
        run: pnpm -w build
